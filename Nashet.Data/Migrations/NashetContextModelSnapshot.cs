// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nashet.Data.Models;

#nullable disable

namespace Nashet.Data.Migrations
{
    [DbContext(typeof(NashetContext))]
    partial class NashetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Nashet.Data.Models.tblActivity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"));

                    b.Property<string>("ActivityDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("ActivityEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActivityLocation")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ActivityPoster")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("ActivityStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActivityTopic")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ClubId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("isSent")
                        .HasColumnType("bit");

                    b.HasKey("ActivityId");

                    b.HasIndex("ClubId");

                    b.ToTable("tblActivity");
                });

            modelBuilder.Entity("Nashet.Data.Models.tblActivityRequest", b =>
                {
                    b.Property<int>("ARId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ARId"));

                    b.Property<DateTime>("ActivityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActivityLocation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ActivityPoster")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ActivityRequestId")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("ActivityTime")
                        .HasColumnType("time");

                    b.Property<string>("ActivityTopic")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ClubID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SiteID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.Property<bool>("isSent")
                        .HasColumnType("bit");

                    b.HasKey("ARId");

                    b.HasIndex("ClubID");

                    b.HasIndex("SiteID");

                    b.HasIndex("UserID");

                    b.ToTable("tblActivityRequest");
                });

            modelBuilder.Entity("Nashet.Data.Models.tblAnnouncement", b =>
                {
                    b.Property<int>("AnnouncementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnnouncementId"));

                    b.Property<string>("AnnouncementDetails")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AnnouncementImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnnouncementTopic")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AnnouncementType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ClubId")
                        .HasColumnType("int");

                    b.Property<string>("ClubNameAR")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int");

                    b.Property<bool>("isSent")
                        .HasColumnType("bit");

                    b.HasKey("AnnouncementId");

                    b.HasIndex("ClubId");

                    b.HasIndex("SiteId");

                    b.ToTable("tblAnnouncement");
                });

            modelBuilder.Entity("Nashet.Data.Models.tblClub", b =>
                {
                    b.Property<int>("ClubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClubId"));

                    b.Property<string>("ClubIcon")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ClubNameAR")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClubNameEN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClubOverview")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ClubVision")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("isSent")
                        .HasColumnType("bit");

                    b.Property<int?>("siteId")
                        .HasColumnType("int");

                    b.HasKey("ClubId");

                    b.HasIndex("siteId");

                    b.ToTable("tblClub");
                });

            modelBuilder.Entity("Nashet.Data.Models.tblClubRole", b =>
                {
                    b.Property<int>("ClubRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClubRoleId"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RoleTypeAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RoleTypeEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("isSent")
                        .HasColumnType("bit");

                    b.HasKey("ClubRoleId");

                    b.ToTable("tblClubRole");
                });

            modelBuilder.Entity("Nashet.Data.Models.tblEmailNotificationLog", b =>
                {
                    b.Property<int>("EmailNotificationsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmailNotificationsId"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UserEmail")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("isSent")
                        .HasColumnType("bit");

                    b.HasKey("EmailNotificationsId");

                    b.ToTable("tblEmailNotificationLog");
                });

            modelBuilder.Entity("Nashet.Data.Models.tblKFUuser", b =>
                {
                    b.Property<int>("KFUUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KFUUserId"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameAR")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NameEN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserPhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UserType")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Username")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("isSent")
                        .HasColumnType("bit");

                    b.HasKey("KFUUserId");

                    b.ToTable("tblKFUuser");

                    b.HasData(
                        new
                        {
                            KFUUserId = 1,
                            CreationDate = new DateTime(2025, 10, 13, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("7f4a5d58-29db-411b-8e3e-dcf0918e5dc7"),
                            IsActive = true,
                            IsDeleted = false,
                            NameAR = "منتهى",
                            NameEN = "Muntaha",
                            Password = "Muntaha",
                            UserEmail = "Muntaha@gmail.com",
                            UserPhone = "0536763284",
                            UserType = "Admin",
                            Username = "Muntaha_12",
                            isSent = true
                        },
                        new
                        {
                            KFUUserId = 2,
                            CreationDate = new DateTime(2025, 10, 13, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("9ba46550-b007-48cf-9f21-bc473d2b4393"),
                            IsActive = true,
                            IsDeleted = false,
                            NameAR = "هدى",
                            NameEN = "Huda",
                            Password = "Huda",
                            UserEmail = "Huda@gmail.com",
                            UserPhone = "0533924794",
                            UserType = "Activities Supervisor",
                            Username = "Huda1",
                            isSent = true
                        },
                        new
                        {
                            KFUUserId = 3,
                            CreationDate = new DateTime(2025, 10, 13, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("08d5ea5b-4216-40d6-b166-53c4dfa363e7"),
                            IsActive = true,
                            IsDeleted = false,
                            NameAR = "نبراس",
                            NameEN = "Nebras",
                            Password = "Nebras",
                            UserEmail = "Nebras@gmail.com",
                            UserPhone = "0540345575",
                            UserType = "Student",
                            Username = "Nebras2",
                            isSent = true
                        });
                });

            modelBuilder.Entity("Nashet.Data.Models.tblMembership", b =>
                {
                    b.Property<int>("MembershipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MembershipId"));

                    b.Property<int?>("ClubRoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<bool>("isSent")
                        .HasColumnType("bit");

                    b.HasKey("MembershipId");

                    b.HasIndex("ClubRoleId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeamId");

                    b.ToTable("tblMembership");
                });

            modelBuilder.Entity("Nashet.Data.Models.tblMembershipRequest", b =>
                {
                    b.Property<int>("MRId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MRId"));

                    b.Property<int?>("ClubID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestReason")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("RequestTeam1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RequestTeam2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RequestTeam3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("StudentID")
                        .HasColumnType("int");

                    b.Property<int?>("TeamID")
                        .HasColumnType("int");

                    b.Property<bool>("isSent")
                        .HasColumnType("bit");

                    b.HasKey("MRId");

                    b.HasIndex("ClubID");

                    b.HasIndex("StudentID");

                    b.HasIndex("TeamID");

                    b.ToTable("TblMembershipRequest");
                });

            modelBuilder.Entity("Nashet.Data.Models.tblPositionRequest", b =>
                {
                    b.Property<int>("PRId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PRId"));

                    b.Property<int?>("ClubRoleID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MembershipID")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestedPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SystemPositionRequest")
                        .HasColumnType("int");

                    b.Property<bool>("isSent")
                        .HasColumnType("bit");

                    b.HasKey("PRId");

                    b.HasIndex("ClubRoleID");

                    b.HasIndex("MembershipID");

                    b.ToTable("tblPositionRequest");
                });

            modelBuilder.Entity("Nashet.Data.Models.tblReport", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<int?>("ClubId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdded")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Path")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Topic")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("isSent")
                        .HasColumnType("bit");

                    b.HasKey("ReportId");

                    b.HasIndex("ClubId");

                    b.ToTable("tblReport");
                });

            modelBuilder.Entity("Nashet.Data.Models.tblSite", b =>
                {
                    b.Property<int>("SiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiteId"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SiteCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SiteNameAR")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SiteNameEn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("isSent")
                        .HasColumnType("bit");

                    b.HasKey("SiteId");

                    b.ToTable("tblSite");

                    b.HasData(
                        new
                        {
                            SiteId = 1,
                            CreationDate = new DateTime(2025, 10, 13, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("9b7c9604-e3f3-40a4-9015-9916b7cabcff"),
                            IsActive = true,
                            IsDeleted = false,
                            SiteCode = "0920",
                            SiteNameAR = "كلية علوم الحاسب وتقنية المعلومات",
                            SiteNameEn = "College of Computer Science and Information Technology",
                            isSent = true
                        },
                        new
                        {
                            SiteId = 16,
                            CreationDate = new DateTime(2025, 10, 13, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("0f6645f8-ff4e-4d89-8aff-b14443d2688f"),
                            IsActive = true,
                            IsDeleted = false,
                            SiteCode = "0930",
                            SiteNameAR = "كلية إدارة الأعمال",
                            SiteNameEn = "College of Business",
                            isSent = true
                        },
                        new
                        {
                            SiteId = 2,
                            CreationDate = new DateTime(2025, 10, 13, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("8f4336da-ea19-4019-8090-5a6cf70dbf49"),
                            IsActive = true,
                            IsDeleted = false,
                            SiteCode = "0940",
                            SiteNameAR = "كلية الهندسة",
                            SiteNameEn = "College of Engineering",
                            isSent = true
                        },
                        new
                        {
                            SiteId = 3,
                            CreationDate = new DateTime(2025, 10, 13, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("cc83caab-60ec-4781-a2fc-0cae1217f7fc"),
                            IsActive = true,
                            IsDeleted = false,
                            SiteCode = "0950",
                            SiteNameAR = "كلية الصيدلة الإكلينيكية",
                            SiteNameEn = "College of Clinical Pharmacy",
                            isSent = true
                        },
                        new
                        {
                            SiteId = 4,
                            CreationDate = new DateTime(2025, 10, 13, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("332f3a58-9aa3-4898-8f29-ff832149c240"),
                            IsActive = true,
                            IsDeleted = false,
                            SiteCode = "0960",
                            SiteNameAR = "كلية العلوم الطبية",
                            SiteNameEn = "College of Applied Medical Sciences",
                            isSent = true
                        },
                        new
                        {
                            SiteId = 5,
                            CreationDate = new DateTime(2025, 10, 13, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("0fe1af63-f72e-402e-b0b1-87013f4c06b9"),
                            IsActive = true,
                            IsDeleted = false,
                            SiteCode = "0300",
                            SiteNameAR = "كلية العلوم",
                            SiteNameEn = "College of Science",
                            isSent = true
                        },
                        new
                        {
                            SiteId = 6,
                            CreationDate = new DateTime(2025, 10, 13, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("4516c8da-9634-4cf6-bfe7-eaa2f1dc5c29"),
                            IsActive = true,
                            IsDeleted = false,
                            SiteCode = "0310",
                            SiteNameAR = "كلية الطب",
                            SiteNameEn = "College of Medicine",
                            isSent = true
                        },
                        new
                        {
                            SiteId = 7,
                            CreationDate = new DateTime(2025, 10, 13, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("37dba4ea-1caa-4c81-a022-e00e17ec2ebd"),
                            IsActive = true,
                            IsDeleted = false,
                            SiteCode = "0320",
                            SiteNameAR = "كلية الحقوق",
                            SiteNameEn = "College of Law",
                            isSent = true
                        },
                        new
                        {
                            SiteId = 8,
                            CreationDate = new DateTime(2025, 10, 13, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("2110b192-c071-484b-9d03-035ec84f2e9d"),
                            IsActive = true,
                            IsDeleted = false,
                            SiteCode = "0340",
                            SiteNameAR = "كلية العلوم الزراعية والتغذية",
                            SiteNameEn = "College of Agricultural Science and Nutrition",
                            isSent = true
                        },
                        new
                        {
                            SiteId = 9,
                            CreationDate = new DateTime(2025, 10, 13, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("4646924f-08b9-4e80-9bab-2318eade4917"),
                            IsActive = true,
                            IsDeleted = false,
                            SiteCode = "2200",
                            SiteNameAR = "كلية الاداب",
                            SiteNameEn = "College of Arts",
                            isSent = true
                        },
                        new
                        {
                            SiteId = 10,
                            CreationDate = new DateTime(2025, 10, 13, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("fbf9fe3e-45e3-40cf-881c-0d9a2327e236"),
                            IsActive = true,
                            IsDeleted = false,
                            SiteCode = "2230",
                            SiteNameAR = "عمادة شؤون الطلاب",
                            SiteNameEn = "Deanship of Student Affairs",
                            isSent = true
                        },
                        new
                        {
                            SiteId = 11,
                            CreationDate = new DateTime(2025, 10, 13, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("2a4cf10c-9bff-45d6-b8c1-a9cc39c76abd"),
                            IsActive = true,
                            IsDeleted = false,
                            SiteCode = "3100",
                            SiteNameAR = "كلية الدراسات التطبيقية وخدمة المجتمع",
                            SiteNameEn = "College of Applied Studies & Community Services",
                            isSent = true
                        },
                        new
                        {
                            SiteId = 12,
                            CreationDate = new DateTime(2025, 10, 13, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("7683cbea-2a4d-4b86-8cdb-c1f98bffbbab"),
                            IsActive = false,
                            IsDeleted = false,
                            SiteCode = "3200",
                            SiteNameAR = "كلية التربية",
                            SiteNameEn = "College of Education",
                            isSent = true
                        },
                        new
                        {
                            SiteId = 13,
                            CreationDate = new DateTime(2025, 10, 13, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("d58cd45c-e772-4930-ace6-ff8f73562164"),
                            IsActive = false,
                            IsDeleted = false,
                            SiteCode = "3500",
                            SiteNameAR = "كلية الطب البيطري",
                            SiteNameEn = "College of Veterinary Medicine",
                            isSent = true
                        },
                        new
                        {
                            SiteId = 14,
                            CreationDate = new DateTime(2025, 10, 13, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("8c2571f1-5acf-412e-bc70-15318a302a0e"),
                            IsActive = false,
                            IsDeleted = false,
                            SiteCode = "4311",
                            SiteNameAR = "عمادة التعلم الإلكتروني وتقنية المعلومات",
                            SiteNameEn = "Deanship of of E-learning and Information Technology",
                            isSent = true
                        },
                        new
                        {
                            SiteId = 15,
                            CreationDate = new DateTime(2025, 10, 13, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("e29da295-9a8b-4976-be0a-22772690fe01"),
                            IsActive = false,
                            IsDeleted = false,
                            SiteCode = "2100",
                            SiteNameAR = "عمادة التطوير وضمان الجودة",
                            SiteNameEn = "Deanship of of Development and Quality Assurance",
                            isSent = true
                        });
                });

            modelBuilder.Entity("Nashet.Data.Models.tblStudent", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("AcademicId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.Property<string>("StudentEmail")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("StudentNameAr")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("StudentNameEn")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("StudentPhone")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("StudentSkills")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("isSent")
                        .HasColumnType("bit");

                    b.HasKey("StudentId");

                    b.HasIndex("SiteId");

                    b.ToTable("tblStudent");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            AcademicId = "221422576",
                            CreationDate = new DateTime(2025, 10, 13, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("966bf84b-467d-4385-ae94-867f741e75b9"),
                            IsActive = true,
                            IsDeleted = false,
                            SiteId = 10,
                            StudentEmail = "Nebras@gmail.com",
                            StudentNameAr = "نبراس",
                            StudentNameEn = "Nebras",
                            StudentPhone = "0540345575",
                            StudentSkills = "Fast Learner",
                            isSent = true
                        },
                        new
                        {
                            StudentId = 2,
                            AcademicId = "220430000",
                            CreationDate = new DateTime(2025, 10, 13, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("0ad3db67-b821-4503-b0b0-c3c6cf160d36"),
                            IsActive = true,
                            IsDeleted = false,
                            SiteId = 10,
                            StudentEmail = "Safa@gmail.com",
                            StudentNameAr = "صفا",
                            StudentNameEn = "Safa",
                            StudentPhone = "0509410406",
                            StudentSkills = "التعاون",
                            isSent = true
                        });
                });

            modelBuilder.Entity("Nashet.Data.Models.tblSystemLogs", b =>
                {
                    b.Property<int>("LogsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogsId"));

                    b.Property<string>("NewValue")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("OldValue")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("RecordId")
                        .HasColumnType("int");

                    b.Property<string>("Table")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("operation_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("operation_type")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("other_details")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("username")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("LogsId");

                    b.HasIndex("UserId");

                    b.ToTable("tblSystemLogs");
                });

            modelBuilder.Entity("Nashet.Data.Models.tblSystemNotification", b =>
                {
                    b.Property<int>("SystemNotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SystemNotificationId"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isSent")
                        .HasColumnType("bit");

                    b.HasKey("SystemNotificationId");

                    b.ToTable("tblSystemNotification");
                });

            modelBuilder.Entity("Nashet.Data.Models.tblSystemRole", b =>
                {
                    b.Property<int>("SystemRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SystemRoleId"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RoleTypeAr")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("RoleTypeEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isSent")
                        .HasColumnType("bit");

                    b.HasKey("SystemRoleId");

                    b.ToTable("tblSystemRole");

                    b.HasData(
                        new
                        {
                            SystemRoleId = 1,
                            CreationDate = new DateTime(2025, 10, 5, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("fabba72d-d4b0-4c12-be52-a8b868bc6007"),
                            IsActive = true,
                            IsDeleted = false,
                            RoleTypeAr = "مدير النظام",
                            RoleTypeEn = "Admin",
                            isSent = true
                        },
                        new
                        {
                            SystemRoleId = 2,
                            CreationDate = new DateTime(2025, 10, 5, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("90d065f4-1a15-40b7-8866-0219b1251646"),
                            IsActive = true,
                            IsDeleted = false,
                            RoleTypeAr = "مشرف النشاط",
                            RoleTypeEn = "Activity Supervisor",
                            isSent = true
                        },
                        new
                        {
                            SystemRoleId = 3,
                            CreationDate = new DateTime(2025, 10, 5, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("ea0e8ba3-8b61-44cb-bb9a-e763f1ac6dac"),
                            IsActive = true,
                            IsDeleted = false,
                            RoleTypeAr = "مشرف النادي",
                            RoleTypeEn = "Club Supervisor",
                            isSent = true
                        },
                        new
                        {
                            SystemRoleId = 4,
                            CreationDate = new DateTime(2025, 10, 5, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("4ab11078-e7a8-40a3-8a39-a636735b5834"),
                            IsActive = true,
                            IsDeleted = false,
                            RoleTypeAr = "قائد النادي",
                            RoleTypeEn = "Club Leader",
                            isSent = true
                        },
                        new
                        {
                            SystemRoleId = 5,
                            CreationDate = new DateTime(2025, 10, 5, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("3e9eda03-140d-4b78-8019-3925ae795e47"),
                            IsActive = true,
                            IsDeleted = false,
                            RoleTypeAr = "الطالب",
                            RoleTypeEn = "Student",
                            isSent = true
                        });
                });

            modelBuilder.Entity("Nashet.Data.Models.tblTeam", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<int?>("ClubId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TeamNameAR")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TeamNameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("isSent")
                        .HasColumnType("bit");

                    b.HasKey("TeamId");

                    b.HasIndex("ClubId");

                    b.ToTable("tblTeam");
                });

            modelBuilder.Entity("Nashet.Data.Models.tblUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int");

                    b.Property<string>("SystemROles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SystemRoleId")
                        .HasColumnType("int");

                    b.Property<string>("SystemRoleType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserNameAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameEN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserPhone")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("isSent")
                        .HasColumnType("bit");

                    b.HasKey("UserId");

                    b.HasIndex("SiteId");

                    b.HasIndex("SystemRoleId");

                    b.ToTable("tblUser");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreationDate = new DateTime(2025, 10, 13, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("ca0fad06-8c13-4858-a0a2-4e1115e11ca1"),
                            IsActive = true,
                            IsDeleted = false,
                            SystemRoleId = 1,
                            UserEmail = "Muntaha@gmail.com",
                            UserNameAR = "منتهى",
                            UserNameEN = "Muntaha",
                            UserPhone = "0536763284",
                            Username = "Muntaha_12",
                            isSent = true
                        },
                        new
                        {
                            UserId = 2,
                            CreationDate = new DateTime(2025, 10, 13, 11, 43, 22, 0, DateTimeKind.Utc),
                            Guid = new Guid("3072cf40-dc60-41f0-87da-77631050caa3"),
                            IsActive = true,
                            IsDeleted = false,
                            SystemRoleId = 2,
                            UserEmail = "Huda@gmail.com",
                            UserNameAR = "هدى",
                            UserNameEN = "Huda",
                            UserPhone = "0533924794",
                            Username = "Huda1",
                            isSent = true
                        });
                });

            modelBuilder.Entity("Nashet.Data.Models.tblActivity", b =>
                {
                    b.HasOne("Nashet.Data.Models.tblClub", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Club");
                });

            modelBuilder.Entity("Nashet.Data.Models.tblActivityRequest", b =>
                {
                    b.HasOne("Nashet.Data.Models.tblClub", "Club")
                        .WithMany()
                        .HasForeignKey("ClubID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Nashet.Data.Models.tblSite", "Site")
                        .WithMany()
                        .HasForeignKey("SiteID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Nashet.Data.Models.tblUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Club");

                    b.Navigation("Site");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Nashet.Data.Models.tblAnnouncement", b =>
                {
                    b.HasOne("Nashet.Data.Models.tblClub", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Nashet.Data.Models.tblSite", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Club");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Nashet.Data.Models.tblClub", b =>
                {
                    b.HasOne("Nashet.Data.Models.tblSite", "Site")
                        .WithMany()
                        .HasForeignKey("siteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Nashet.Data.Models.tblMembership", b =>
                {
                    b.HasOne("Nashet.Data.Models.tblClubRole", "ClubRole")
                        .WithMany()
                        .HasForeignKey("ClubRoleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Nashet.Data.Models.tblStudent", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Nashet.Data.Models.tblTeam", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ClubRole");

                    b.Navigation("Student");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Nashet.Data.Models.tblMembershipRequest", b =>
                {
                    b.HasOne("Nashet.Data.Models.tblClub", "Club")
                        .WithMany()
                        .HasForeignKey("ClubID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Nashet.Data.Models.tblStudent", "Student")
                        .WithMany()
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Nashet.Data.Models.tblTeam", "Team")
                        .WithMany()
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Club");

                    b.Navigation("Student");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Nashet.Data.Models.tblPositionRequest", b =>
                {
                    b.HasOne("Nashet.Data.Models.tblClubRole", "ClubRole")
                        .WithMany()
                        .HasForeignKey("ClubRoleID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Nashet.Data.Models.tblMembership", "Membership")
                        .WithMany()
                        .HasForeignKey("MembershipID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ClubRole");

                    b.Navigation("Membership");
                });

            modelBuilder.Entity("Nashet.Data.Models.tblReport", b =>
                {
                    b.HasOne("Nashet.Data.Models.tblClub", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Club");
                });

            modelBuilder.Entity("Nashet.Data.Models.tblStudent", b =>
                {
                    b.HasOne("Nashet.Data.Models.tblSite", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Nashet.Data.Models.tblSystemLogs", b =>
                {
                    b.HasOne("Nashet.Data.Models.tblUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Nashet.Data.Models.tblTeam", b =>
                {
                    b.HasOne("Nashet.Data.Models.tblClub", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Club");
                });

            modelBuilder.Entity("Nashet.Data.Models.tblUser", b =>
                {
                    b.HasOne("Nashet.Data.Models.tblSite", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Nashet.Data.Models.tblSystemRole", "SystemRole")
                        .WithMany()
                        .HasForeignKey("SystemRoleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Site");

                    b.Navigation("SystemRole");
                });
#pragma warning restore 612, 618
        }
    }
}
